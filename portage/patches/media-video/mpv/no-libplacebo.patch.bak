diff --git a/demux/demux_mkv.c b/demux/demux_mkv.c
index 41226c5..b099bab 100644
--- a/demux/demux_mkv.c
+++ b/demux/demux_mkv.c
@@ -592,58 +592,6 @@ static void parse_trackcolour(struct demuxer *demuxer, struct mkv_track *track,
         MP_DBG(demuxer, "|    + Levels: %s\n",
                    m_opt_choice_str(mp_csp_levels_names, track->color.levels));
     }
-    if (colour->n_max_cll) {
-        track->color.hdr.max_cll = colour->max_cll;
-        MP_DBG(demuxer, "|    + MaxCLL: %"PRIu64"\n", colour->max_cll);
-    }
-    if (colour->n_max_fall) {
-        track->color.hdr.max_fall = colour->max_fall;
-        MP_DBG(demuxer, "|    + MaxFALL: %"PRIu64"\n", colour->max_cll);
-    }
-    if (colour->n_mastering_metadata) {
-        struct ebml_mastering_metadata *mastering = &colour->mastering_metadata;
-
-        if (mastering->n_primary_r_chromaticity_x) {
-            track->color.hdr.prim.red.x = mastering->primary_r_chromaticity_x;
-            MP_DBG(demuxer, "|    + PrimaryRChromaticityX: %f\n", track->color.hdr.prim.red.x);
-        }
-        if (mastering->n_primary_r_chromaticity_y) {
-            track->color.hdr.prim.red.y = mastering->primary_r_chromaticity_y;
-            MP_DBG(demuxer, "|    + PrimaryRChromaticityY: %f\n", track->color.hdr.prim.red.y);
-        }
-        if (mastering->n_primary_g_chromaticity_x) {
-            track->color.hdr.prim.green.x = mastering->primary_g_chromaticity_x;
-            MP_DBG(demuxer, "|    + PrimaryGChromaticityX: %f\n", track->color.hdr.prim.green.x);
-        }
-        if (mastering->n_primary_g_chromaticity_y) {
-            track->color.hdr.prim.green.y = mastering->primary_g_chromaticity_y;
-            MP_DBG(demuxer, "|    + PrimaryGChromaticityY: %f\n", track->color.hdr.prim.green.y);
-        }
-        if (mastering->n_primary_b_chromaticity_x) {
-            track->color.hdr.prim.blue.x = mastering->primary_b_chromaticity_x;
-            MP_DBG(demuxer, "|    + PrimaryBChromaticityX: %f\n", track->color.hdr.prim.blue.x);
-        }
-        if (mastering->n_primary_b_chromaticity_y) {
-            track->color.hdr.prim.blue.y = mastering->primary_b_chromaticity_y;
-            MP_DBG(demuxer, "|    + PrimaryBChromaticityY: %f\n", track->color.hdr.prim.blue.y);
-        }
-        if (mastering->n_white_point_chromaticity_x) {
-            track->color.hdr.prim.white.x = mastering->white_point_chromaticity_x;
-            MP_DBG(demuxer, "|    + WhitePointChromaticityX: %f\n", track->color.hdr.prim.white.x);
-        }
-        if (mastering->n_white_point_chromaticity_y) {
-            track->color.hdr.prim.white.y = mastering->white_point_chromaticity_y;
-            MP_DBG(demuxer, "|    + WhitePointChromaticityY: %f\n", track->color.hdr.prim.white.y);
-        }
-        if (mastering->n_luminance_min) {
-            track->color.hdr.min_luma = mastering->luminance_min;
-            MP_DBG(demuxer, "|    + LuminanceMin: %f\n", track->color.hdr.min_luma);
-        }
-        if (mastering->n_luminance_max) {
-            track->color.hdr.max_luma = mastering->luminance_max;
-            MP_DBG(demuxer, "|    + LuminanceMax: %f\n", track->color.hdr.max_luma);
-        }
-    }
 }
 
 static void parse_trackprojection(struct demuxer *demuxer, struct mkv_track *track,
diff --git a/meson.build b/meson.build
index ffa1f48..f0769ed 100644
--- a/meson.build
+++ b/meson.build
@@ -23,8 +23,6 @@ libavutil = dependency('libavutil', version: '>= 56.70.100')
 libswresample = dependency('libswresample', version: '>= 3.9.100')
 libswscale = dependency('libswscale', version: '>= 5.9.100')
 
-libplacebo = dependency('libplacebo', version: '>=6.338.0')
-
 libass = dependency('libass', version: '>= 0.12.2')
 
 # the dependency order of libass -> ffmpeg is necessary due to
@@ -34,7 +32,6 @@ dependencies = [libass,
                 libavfilter,
                 libavformat,
                 libavutil,
-                libplacebo,
                 libswresample,
                 libswscale]
 
@@ -47,7 +44,6 @@ features = {
     'avif-muxer': libavformat.version().version_compare('>= 59.24.100'),
     'libass': true,
     'threads': true,
-    'libplacebo': true,
 }
 
 
@@ -238,12 +234,6 @@ sources = files(
     'video/repack.c',
     'video/sws_utils.c',
 
-    ## libplacebo
-    'video/out/placebo/ra_pl.c',
-    'video/out/placebo/utils.c',
-    'video/out/vo_gpu_next.c',
-    'video/out/gpu_next/context.c',
-
     ## osdep
     'osdep/io.c',
     'osdep/semaphore_osx.c',
@@ -1238,10 +1228,8 @@ endif
 
 
 # vulkan
-vulkan_opt = get_option('vulkan').require(
-    libplacebo.get_variable('pl_has_vulkan', default_value: '0') == '1',
-    error_message: 'libplacebo compiled without vulkan support!',
-)
+vulkan_opt = false
+
 vulkan = dependency('vulkan', version: '>= 1.1.70', required: vulkan_opt)
 features += {'vulkan': vulkan.found()}
 if features['vulkan']
diff --git a/player/command.c b/player/command.c
index 8bff0cd..efb4370 100644
--- a/player/command.c
+++ b/player/command.c
@@ -2292,11 +2292,6 @@ static int property_imgparams(struct mp_image_params p, int action, void *arg)
             (desc.flags & MP_IMGFLAG_ALPHA) ? MP_ALPHA_STRAIGHT : MP_ALPHA_AUTO;
     }
 
-    const struct pl_hdr_metadata *hdr = &p.color.hdr;
-    bool has_cie_y     = pl_hdr_metadata_contains(hdr, PL_HDR_METADATA_CIE_Y);
-    bool has_hdr10     = pl_hdr_metadata_contains(hdr, PL_HDR_METADATA_HDR10);
-    bool has_hdr10plus = pl_hdr_metadata_contains(hdr, PL_HDR_METADATA_HDR10PLUS);
-
     bool has_crop = mp_rect_w(p.crop) > 0 && mp_rect_h(p.crop) > 0;
     const char *aspect_name = get_aspect_ratio_name(d_w / (double)d_h);
     const char *sar_name = get_aspect_ratio_name(p.w / (double)p.h);
@@ -2327,7 +2322,6 @@ static int property_imgparams(struct mp_image_params p, int action, void *arg)
             SUB_PROP_STR(m_opt_choice_str(mp_csp_prim_names, p.color.primaries))},
         {"gamma",
             SUB_PROP_STR(m_opt_choice_str(mp_csp_trc_names, p.color.gamma))},
-        {"sig-peak", SUB_PROP_FLOAT(p.color.hdr.max_luma / MP_REF_WHITE)},
         {"light",
             SUB_PROP_STR(m_opt_choice_str(mp_csp_light_names, p.color.light))},
         {"chroma-location",
@@ -2339,16 +2333,6 @@ static int property_imgparams(struct mp_image_params p, int action, void *arg)
             SUB_PROP_STR(m_opt_choice_str(mp_alpha_names, p.alpha)),
             // avoid using "auto" for "no", so just make it unavailable
             .unavailable = p.alpha == MP_ALPHA_AUTO},
-        {"min-luma",    SUB_PROP_FLOAT(hdr->min_luma),     .unavailable = !has_hdr10},
-        {"max-luma",    SUB_PROP_FLOAT(hdr->max_luma),     .unavailable = !has_hdr10},
-        {"max-cll",     SUB_PROP_FLOAT(hdr->max_cll),      .unavailable = !has_hdr10},
-        {"max-fall",    SUB_PROP_FLOAT(hdr->max_fall),     .unavailable = !has_hdr10},
-        {"scene-max-r", SUB_PROP_FLOAT(hdr->scene_max[0]), .unavailable = !has_hdr10plus},
-        {"scene-max-g", SUB_PROP_FLOAT(hdr->scene_max[1]), .unavailable = !has_hdr10plus},
-        {"scene-max-b", SUB_PROP_FLOAT(hdr->scene_max[2]), .unavailable = !has_hdr10plus},
-        {"scene-avg",   SUB_PROP_FLOAT(hdr->scene_avg),    .unavailable = !has_hdr10plus},
-        {"max-pq-y",    SUB_PROP_FLOAT(hdr->max_pq_y),     .unavailable = !has_cie_y},
-        {"avg-pq-y",    SUB_PROP_FLOAT(hdr->avg_pq_y),     .unavailable = !has_cie_y},
         {0}
     };
 
diff --git a/player/main.c b/player/main.c
index 27cf9b4..62c4a52 100644
--- a/player/main.c
+++ b/player/main.c
@@ -25,8 +25,6 @@
 
 #include "config.h"
 
-#include <libplacebo/config.h>
-
 #include "mpv_talloc.h"
 
 #include "misc/dispatch.h"
@@ -147,7 +145,6 @@ void mp_print_version(struct mp_log *log, int always)
     mp_msg(log, v, "%s %s\n", mpv_version, mpv_copyright);
     if (strcmp(mpv_builddate, "UNKNOWN"))
         mp_msg(log, v, " built on %s\n", mpv_builddate);
-    mp_msg(log, v, "libplacebo version: %s\n", PL_VERSION);
     check_library_versions(log, v);
     mp_msg(log, v, "\n");
     // Only in verbose mode.
diff --git a/video/csputils.c b/video/csputils.c
index 59200c5..e5abb41 100644
--- a/video/csputils.c
+++ b/video/csputils.c
@@ -131,7 +131,6 @@ void mp_colorspace_merge(struct mp_colorspace *orig, struct mp_colorspace *new)
         orig->gamma = new->gamma;
     if (!orig->light)
         orig->light = new->light;
-    pl_hdr_metadata_merge(&orig->hdr, &new->hdr);
 }
 
 // The short name _must_ match with what vf_stereo3d accepts (if supported).
@@ -910,8 +909,7 @@ bool mp_colorspace_equal(struct mp_colorspace c1, struct mp_colorspace c2)
            c1.levels == c2.levels &&
            c1.primaries == c2.primaries &&
            c1.gamma == c2.gamma &&
-           c1.light == c2.light &&
-           pl_hdr_metadata_equal(&c1.hdr, &c2.hdr);
+           c1.light == c2.light;
 }
 
 enum mp_csp_equalizer_param {
diff --git a/video/csputils.h b/video/csputils.h
index 3a904cb..1e16cc0 100644
--- a/video/csputils.h
+++ b/video/csputils.h
@@ -21,8 +21,6 @@
 #include <stdbool.h>
 #include <stdint.h>
 
-#include <libplacebo/colorspace.h>
-
 #include "options/m_option.h"
 
 /* NOTE: the csp and levels AUTO values are converted to specific ones
@@ -147,7 +145,6 @@ struct mp_colorspace {
     enum mp_csp_prim primaries;
     enum mp_csp_trc gamma;
     enum mp_csp_light light;
-    struct pl_hdr_metadata hdr;
 };
 
 // For many colorspace conversions, in particular those involving HDR, an
diff --git a/video/filter/vf_format.c b/video/filter/vf_format.c
index 4997d6f..fae35df 100644
--- a/video/filter/vf_format.c
+++ b/video/filter/vf_format.c
@@ -77,12 +77,9 @@ static void set_params(struct vf_format_opts *p, struct mp_image_params *out,
             // When changing the gamma function explicitly, also reset stuff
             // related to the gamma function since that information will almost
             // surely be false now and have to be re-inferred
-            out->color.hdr = (struct pl_hdr_metadata){0};
             out->color.light = MP_CSP_LIGHT_AUTO;
         }
     }
-    if (p->sig_peak)
-        out->color.hdr = (struct pl_hdr_metadata){ .max_luma = p->sig_peak * MP_REF_WHITE };
     if (p->light)
         out->color.light = p->light;
     if (p->chroma_location)
diff --git a/video/mp_image.c b/video/mp_image.c
index dff2051..571d0e5 100644
--- a/video/mp_image.c
+++ b/video/mp_image.c
@@ -27,7 +27,6 @@
 #include <libavutil/rational.h>
 #include <libavcodec/avcodec.h>
 #include <libavutil/mastering_display_metadata.h>
-#include <libplacebo/utils/libav.h>
 
 #if LIBAVUTIL_VERSION_INT >= AV_VERSION_INT(57, 16, 100)
 # include <libavutil/dovi_meta.h>
